/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dev.argon.jawawasm.app;

import dev.argon.jawawasm.format.text.ScriptCommand;
import dev.argon.jawawasm.format.text.ScriptReader;
import org.junit.jupiter.api.DynamicTest;
import org.junit.jupiter.api.TestFactory;

import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;
import java.util.stream.Stream;

import static org.junit.jupiter.api.Assertions.assertEquals;

class ScriptTests {

	private final List<String> excludedTests = List.of("inline-module.wast");

    @TestFactory
	Stream<DynamicTest> wastScriptTests() throws IOException {
		return Files.walk(Path.of("../webassembly-spec/test/core"))
				.filter(path -> Files.isRegularFile(path) && path.getFileName().toString().endsWith(".wast") && !excludedTests.contains(path.getFileName().toString()))
				.map(path -> DynamicTest.dynamicTest(path.getFileName().toString(), () -> runWastScript(path)));
	}

	private void runWastScript(Path path) throws Throwable {
		List<? extends ScriptCommand> commands;
		try(var reader = Files.newBufferedReader(path)) {
			commands = new ScriptReader(reader).readCommands();
		}

		try(var interpreter = new ScriptInterpreter(Path.of("../webassembly-spec/interpreter/wasm"), new PrintWriter(System.out))) {
			interpreter.executeScript(commands);
		}
	}
}
